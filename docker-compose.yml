---
# 1. build image pcori-db:  docker-compose build
# 2. run container with db: docker-compose up -d
# 3. delete container:      docker-compose down --remove-orphans
version: '2.1'

services:

  demo:
    image: opstudio/demo
#    command: bundle exec puma -p 9292 -e development
#    command: bundle exec rails s
#    volumes:
#      - .:/app
    env_file:
      - ./local.env
    ports:
      - "3000:3000"

#  worker1:
#    image: 832834918477.dkr.ecr.us-west-2.amazonaws.com/cloudcc-app
#    command: bundle exec sidekiq -C config/sidekiq.yml -e docker_dev
#    volumes:
#      - .:/app
#    environment:
#      SECRET_KEY_BASE: d122b165e826b2efee6b3df02fb13af3d20b74d662c9fdb04279b97e85015047ec6282a88c7fed84d3e439a2029cc14d23d99da6d9f0822e9c9aa714ee569769
#      DATABASE_URL:    mysql2://cloudcc:ni9iNahthei4ohL@mysql/cloudcc
#      REDIS_URL:       redis://redis:6379
#      RAILS_ENV:       docker_dev
#    depends_on:
#      - redis
#      - mysql

#  nginx:
#    image: cloudcc-nginx:1.0.5
#    image: nginx:stable
#    image: 832834918477.dkr.ecr.us-west-2.amazonaws.com/cloudcc-nginx
#    ports:
#      - "8443:8443"
#    volumes:
#      - ./nginx/ssl:/etc/nginx/ssl
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - app
